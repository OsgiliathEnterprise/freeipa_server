---

- name: Facts | retrieve current machine ip
  ansible.builtin.setup:
    gather_subset:
      - network
  register: freeipa_server_current_host_facts
  delegate_facts: true

- name: Facts | debug network facts
  ansible.builtin.debug:
    var: freeipa_server_current_host_facts
    verbosity: 2

- name: Facts | debug preferred_nic
  ansible.builtin.debug:
    var: preferred_nic
    verbosity: 3

- name: Facts | debug preferred_nic
  ansible.builtin.debug:
    msg: "{{ preferred_nic | default(freeipa_server_current_host_facts.ansible_facts.ansible_default_ipv4.interface) }}"
  register: freeipa_server_idm_nic

- name: Facts | compute ip if preferred_nic is not set
  ansible.builtin.debug:
    msg: "{{ freeipa_server_current_host_facts.ansible_facts['ansible_' + freeipa_server_idm_nic.msg | replace('-', '_')].ipv4.address if freeipa_server_idm_nic.msg is defined else freeipa_server_current_host_facts.ansible_facts.ansible_default_ipv4.address | default(freeipa_server_current_host_facts.ansible_facts.ansible_all_ipv4_addresses | first) }}"
  register: freeipa_server_current_host_ip

- name: Facts | retrieve current hostname
  ansible.builtin.command: "hostname"
  changed_when: False
  register: freeipa_server_current_hostname

- name: Facts | compute server hostname
  ansible.builtin.debug:
    msg: "{{ hostname if hostname is defined and hostname.endswith(company_domain) else hostname + '.' + company_domain if hostname is defined else freeipa_server_current_hostname.stdout if freeipa_server_current_hostname.stdout.endswith(company_domain) else idm_server_default_domain_prefix + '.' + company_domain }}"
  register: freeipa_server_freeipa_server_host
