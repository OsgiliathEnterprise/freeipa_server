---
- name: Freeipa-server | convert nic
  ansible.builtin.debug:
    msg: "{{ preferred_nic | default('') }}"
  register: freeipa_server_preferred_nic


- name: Freeipa-server | set hostname
  ansible.builtin.include_role:
    name: tcharl.ansible_hostname
  vars:
    hostname: "{{ securehost_freeipa_server_host.msg }}"
    hostname_reboot: false
    ansible_become: true
    preferred_nic: "{{ freeipa_server_preferred_nic.msg if freeipa_server_preferred_nic.msg.length > 0 else omit }}"
  when:
    - securehost_freeipa_server_host.msg == idm_server_default_domain_prefix + '.' + company_domain

- name: Freeipa-server | opens freeipa services firewall
  ansible.builtin.include_role:
    name: tcharl.ansible_routing
  vars:
    firewalld_zones:
      - name: public
        enabled_services:
          #- service: freeipa-ldap
          #- service: freeipa-ldaps
          #- service: dns
          - service: https
  tags:
    - dependency

- name: Freeipa-server | configures and installs freeipa server
  ansible.builtin.include_role:
    name: freeipa.ansible_freeipa.ipaserver
  vars:
    ipaserver_firewalld_zone: "public"
    ipaserver_auto_reverse: True
    ipaserver_hostname: "{{ securehost_freeipa_server_host.msg }}"
    ipaserver_ip_addresses: "{{ [securehost_current_host_ip.msg] }}"
    ipaserver_domain: "{{ company_domain }}"
    ipaserver_realm: "{{ company_domain | upper }}"
    # ipaserver_forwarders: [ ]
    ipaserver_no_reverse: False
    ipaserver_setup_dns: True
    ipaserver_setup_kra: True
    ipaserver_auto_forwarders: True
    ipaadmin_password: "{{ company_realm_password }}"
    ipadm_password: "{{ company_ad_password }}"
    ipaclient_no_ntp: "{{ True if (ansible_facts['virtualization_type'] is defined and ansible_facts['virtualization_type'] in ['container']) else False }}"
    ansible_become: True
